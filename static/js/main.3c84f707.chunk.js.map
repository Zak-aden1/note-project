{"version":3,"sources":["useFetch.js","Pages/Create/Create.jsx","Pages/Create/index.js","components/NoteCard/NoteCard.jsx","components/NoteCard/index.js","Pages/Notes/index.js","Pages/Notes/Notes.jsx","firebase.js","context/UserContext.js","Layout/Layout.jsx","Layout/index.js","App.jsx","reportWebVitals.js","index.js"],"names":["useFetch","url","useState","notes","setNotes","ispending","setIspending","error","setError","useEffect","fetch","then","res","ok","json","Error","data","catch","err","message","useStyles","makeStyles","field","marginTop","marginBottom","display","Create","history","useHistory","title","setTitle","details","setDetails","category","setCategory","titleError","setTitleError","detailsError","setDetailsError","classes","Container","size","Typography","variant","component","gutterBottom","color","noValidate","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","push","TextField","onChange","target","value","className","label","fullWidth","required","multiline","rows","FormControl","RadioGroup","FormLabel","FormControlLabel","control","Radio","Button","endIcon","type","note","test","red","avColor","backgroundColor","green","pink","blue","NoteCard","handleDelete","Card","elevation","CardHeader","avatar","Avatar","charAt","toUpperCase","subheader","action","IconButton","onClick","id","DeleteOutlined","CardContent","Notes","console","log","newNotes","filter","breakpointCols","default","columnClassName","map","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","UseContext","createContext","UserContext","props","user","setUser","googleProvider","GoogleAuthProvider","onAuthStateChanged","Provider","signIn","signInWithRedirect","signOut","children","theme","page","background","width","padding","spacing","drawer","drawerPaper","root","active","appbar","toolbar","mixins","date","flexGrow","marginLeft","Layout","location","useLocation","menuItems","text","icon","SubjectOutlined","path","AddCircleOutlineOutlined","AppBar","Toolbar","format","Date","Drawer","anchor","paper","List","menu","ListItem","button","pathname","ListItemIcon","ListItemText","primary","createTheme","pallete","secondary","purple","typography","fontFamily","fontWeightLight","fontWeightRegular","fontWeightBold","App","ThemeProvider","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c84f707.chunk.js","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from 'react'\n\nconst useFetch = (url) => {\n    const [notes, setNotes] = useState([])\n    const [ispending, setIspending] = useState(true)\n    const [error, setError] =useState(null)\n    useEffect(() => {\n    fetch(url)\n    .then(res => {\n        if(!res.ok) {\n            throw Error(\"could not fetch data\")\n        } else {\n            return res.json()\n            \n        }\n    })\n    .then(data => {\n        setNotes(data)\n        setIspending(false)\n        setError(null)\n    })\n    .catch(err => {\n        setError(err.message)\n        setIspending(false)\n    })\n    }, [url])\n    return {notes, setNotes, ispending, error}\n}\n\nexport default useFetch\n","import React from 'react'\nimport useFetch from '../../useFetch';\n\nimport { Checkbox, Container, FormControl, FormControlLabel, FormLabel, Typography } from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport ArrowForwardIosOutlinedIcon from '@material-ui/icons/ArrowForwardIosOutlined';\nimport { makeStyles } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { useState } from 'react';\nimport { Radio, RadioGroup } from '@material-ui/core';\nimport { Category } from '@material-ui/icons';\nimport { useHistory } from 'react-router';\n\n\nconst useStyles = makeStyles({\n    field: {\n        marginTop: 20,\n        marginBottom: 20,\n        display: 'block'\n    }\n})\n\nconst Create = () => {\n    const history = useHistory()\n\n    const [title, setTitle] = useState('')\n    const [details, setDetails ] = useState('')\n    const [category, setCategory] = useState('work')\n    const [titleError, setTitleError] = useState(false)\n    const [detailsError, setDetailsError ] = useState(false)\n    const classes = useStyles()\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        setTitleError(false)\n        setDetailsError(false)\n\n        if(title == '') {\n            setTitleError(true)\n        }\n\n        if(details == '') {\n            setDetailsError(true)\n        }\n        if(title && details) {\n            fetch('http://localhost:8080/save', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({title, details, category})\n            })\n            .then(() => history.push('/'))\n        }\n\n    }\n\n    return (\n        <Container size='sm'>\n            <Typography  \n            variant='h6' \n            component='h2' \n            gutterBottom \n            color='textSecondary'\n            >\n                Create A New Note\n            </Typography>\n\n            <form noValidate onSubmit={handleSubmit}>\n            <TextField \n                onChange={(e) => {setTitle(e.target.value)}}\n                className={classes.field}\n                label='Note Title'\n                color='secondary'\n                variant='outlined'\n                fullWidth\n                required\n                error={titleError}\n                />\n            <TextField \n            onChange={(e) => {setDetails(e.target.value)}}\n                className={classes.field}\n                label='Details'\n                variant='outlined'\n                color='secondary'\n                multiline\n                rows={4}\n                fullWidth\n                required\n                error={detailsError}\n            />\n            <FormControl className={classes.field}>\n                <RadioGroup value={category} onChange={(e) => {setCategory(e.target.value)}}>\n                    <FormLabel>Note Category</FormLabel>\n                    <FormControlLabel value='work' control={<Radio/>} label='Work'/>\n                    <FormControlLabel value='todos' control={<Radio/>} label='Todos'/>\n                    <FormControlLabel value='reminders' control={<Radio/>} label='Reminders'/>\n                    <FormControlLabel value='shopping' control={<Radio/>} label='Shopping'/>\n                </RadioGroup>\n            </FormControl>\n    \n            <Button \n                endIcon={<ArrowForwardIosOutlinedIcon />}  type='submit' \n                color='secondary'\n                variant='contained'\n                >\n                    Submit\n            </Button>\n            </form>\n\n        </Container>\n    )\n}\n\nexport default Create\n","import Create from \"./Create\";\n\nexport default Create","import React from 'react'\nimport { useState } from 'react'\nimport { Card, CardHeader, CardContent, Typography, IconButton, makeStyles, Avatar  } from '@material-ui/core'\nimport { DeleteOutlined } from '@material-ui/icons'\nimport { blue, green, pink, red } from '@material-ui/core/colors'\n\n\n    const useStyles = makeStyles((note) => {\n        return {\n            test: {\n            color: (note) => {\n                if(note.category == 'work') {\n                    return red[700]\n                }\n            }\n        },\n            avColor: {\n                backgroundColor: (note) => {\n                    if(note.category == 'work') {\n                        return red[700]\n                    }\n                    if(note.category == 'shopping') {\n                        return green[500]\n                    }\n                    if(note.category == 'todos') {\n                        return pink[500]\n                    }\n                    return blue[500]\n                }\n            }\n        }\n        \n    })\n\nconst NoteCard = ({note, handleDelete}) => {\n\n    const classes = useStyles(note)\n\n    \n\n\n    \n    return (\n        <div>\n            <Card elevation={8} className={classes.test}>\n                <CardHeader \n                avatar={\n                    <Avatar className={classes.avColor}>\n                        {note.category.charAt(0).toUpperCase()}\n                    </Avatar>\n                }\n                title={note.title}\n                subheader={note.category}\n                action={\n                    <IconButton onClick={() => {handleDelete(note.id)}}>\n                        <DeleteOutlined />\n                    </IconButton>\n                }\n                />\n                <CardContent>\n                    <Typography variant='body2' color='textSecondary'>{note.details}</Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n}\n\nexport default NoteCard\n","import NoteCard from \"./NoteCard\";\n\nexport default NoteCard","import Notes from \"./Notes\";\n\nexport default Notes","import React, {useState} from 'react'\n\nimport NoteCard from '../../components/NoteCard'\nimport { Container, Grid } from '@material-ui/core'\nimport Masonry from 'react-masonry-css'\n\nimport useFetch from '../../useFetch'\n\nconst Notes = () => {\n    \n    \n\n  const {notes, setNotes, ispending, error}=useFetch('http://localhost:8080/notes')\n\n  console.log(notes)\n\n  const handleDelete = (id) => {\n        fetch('http://localhost:8080/delete/' + id, {\n            method: 'DELETE'\n        }) \n        const newNotes = notes.filter(note => note.id != id)\n        setNotes(newNotes)\n    }\n\n  const breakpoints = {\n        default: 3,\n        1100: 2,\n        700: 1\n    }\n    \n\n    return (\n        <Container>\n            {ispending && <div>loading....</div>}\n            {error && <div> {error}</div>}\n            <Masonry\n                breakpointCols={breakpoints}\n                className=\"my-masonry-grid\"\n                columnClassName=\"my-masonry-grid_column\">\n            {/* <Grid container spacing={3}> */}\n                {notes.map((note) => (\n                    // <Grid key={note.id} item xs={12} md={6} lg={4}>\n                    <div key={note.id}>\n                        <NoteCard handleDelete={handleDelete}  note={note}/>\n                    </div>\n                ))}\n                </Masonry>\n            {/* </Grid> */}\n        </Container>\n    )\n}\n\nexport default Notes\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB38r5PTpMzX1lT7ia74cr8iSJ1oF5onrM\",\n    authDomain: \"note-project-272fe.firebaseapp.com\",\n    projectId: \"note-project-272fe\",\n    storageBucket: \"note-project-272fe.appspot.com\",\n    messagingSenderId: \"574689139198\",\n    appId: \"1:574689139198:web:62cb06ee6638dcd47588af\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nexport const firestore = firebase.firestore();\nexport const auth = firebase.auth();\n// export const provider = new firebase.auth.GoogleAuthProvider();\nexport default firebase;","import React, {useState, useEffect, createContext} from 'react'\nimport firebase from '../firebase'\n\nexport const UseContext = createContext({});\n\nconst UserContext = (props) => {\n    const [user, setUser] = useState('please Sign in');\n\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n\n    const signIn = () => {\n        firebase.auth().signInWithRedirect(googleProvider);\n    };\n    const signOut = () => {\n        firebase.auth().signOut().then(() => {\n            setUser(null);\n        });\n    };\n\n    const getUser = () => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                setUser(user);\n            } else {\n                setUser(null);\n            }\n        });\n    };\n\n    useEffect(() => {\n        getUser();\n    }, []);\n    return (\n        <UseContext.Provider value={{ user, signIn, signOut }}>\n            {props.children}\n        </UseContext.Provider>\n    )\n}\n\nexport default UserContext\n","import React from 'react'\n// import styles from 'Layout.module.scss'\nimport { Avatar, makeStyles } from '@material-ui/core'\nimport { Drawer, Typography } from '@material-ui/core'\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport { AddCircleOutlineOutlined, SubjectOutlined } from '@material-ui/icons'\nimport { useHistory, useLocation } from 'react-router'\nimport { AppBar, Toolbar } from '@material-ui/core'\nimport { format } from 'date-fns'\nimport { useContext } from 'react'\nimport UserContext from '../context/UserContext'\n\nconst drawerWidth = 240\n\nconst useStyles = makeStyles((theme) =>{\n    return {\n        page: {\n        background: '#f9f9f9',\n        width: '100%',\n        padding: theme.spacing(3)\n        },\n        drawer: {\n            width: drawerWidth\n        },\n        drawerPaper: {\n            width: drawerWidth, \n        },\n        root: {\n            display: 'flex'\n        },\n        active: {\n            background: '#f4f4f4'\n        },\n        title: {\n            padding: theme.spacing(2)\n        },\n        appbar: {\n            backgroundColor: '#f4f4f4',\n            color: 'black',\n            width: `calc(100% - ${drawerWidth}px)`\n        },\n        toolbar: theme.mixins.toolbar,\n        date: {\n            flexGrow: 1\n        },\n        avatar: {\n            marginLeft: theme.spacing(2)\n        }\n        }\n})\n\nconst Layout = ({children}) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const location = useLocation()\n\n    const menuItems = [\n        {\n            text: 'My Notes',\n            icon: <SubjectOutlined color='secondary'/>,\n            path: '/'\n        },\n        {\n            text: 'Create Note',\n            icon: <AddCircleOutlineOutlined color='secondary' />,\n            path: '/create'\n        }\n    ]\n\n    // const userContext = useContext(UserContext);\n    // console.log(userContext);\n    // const { user, signIn, signOut } = userContext;\n\n    // const ShowUserName = user ? user.displayName : 'guest';\n    \n\n    return (\n        <div className={classes.root}>\n            {/* app bar */}\n            <AppBar className={classes.appbar}>\n                <Toolbar>\n                    <Typography className={classes.date} variant='h5'>\n                         today is the {format(new Date(), 'do MMMM Y')}\n                    </Typography>\n                    <Typography>\n                        {/* {ShowUserName} */}\n                    </Typography>\n                    <Avatar className={classes.avatar}>Z</Avatar>\n                </Toolbar>\n            </AppBar>\n\n            {/* side Drawer */}\n            <Drawer\n            className={classes.drawer}\n            anchor='left'\n            variant='permanent' \n            classes={{paper: classes.drawerPaper}}\n            >\n                <div>\n                    <Typography variant='h5' className={classes.title}>\n                          User Notes\n                    </Typography>\n                </div>\n                <List>\n                    {menuItems.map((menu) => (\n                        <ListItem \n                        key={menu.text}\n                        button\n                        onClick={() => {history.push(menu.path)}}\n                        className={location.pathname == menu.path ? classes.active: null}\n                        // selected={location.pathname == menu.path}\n                        >\n                                <ListItemIcon>{menu.icon}</ListItemIcon>\n                                <ListItemText primary={menu.text} /> \n                        </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n            <div className={classes.page}>\n                <div className={classes.toolbar}></div>\n                {children}\n            </div>\n        </div>\n    )\n}\n\nexport default Layout\n","import Layout from \"./Layout\";\n\nexport default Layout","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport {  ThemeProvider, createTheme } from '@material-ui/core';\nimport Create from './Pages/Create';\nimport Notes from './Pages/Notes';\nimport { purple } from '@material-ui/core/colors';\nimport Layout from './Layout';\nimport UserContext from './context/UserContext';\n\nconst theme = createTheme({\n  pallete: {\n    secondary: purple,\n  },\n  typography: {\n    fontFamily: 'Quicksand',\n    fontWeightLight: 400, \n    fontWeightRegular: 500,\n    fontWeightBold: 600,\n  }\n})\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <UserContext>\n    <Router>\n      <Layout>\n      <Switch>\n\n          <Route exact path='/'>\n              <Notes/>\n          </Route>\n\n          <Route  path='/create'>\n              <Create />\n          </Route>\n\n      </Switch>\n      </Layout>\n    </Router>\n    </UserContext>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}